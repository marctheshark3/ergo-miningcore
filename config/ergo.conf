ergo {
  # Directory to keep data
  directory = "/home/ergo/.ergo"
  
  # Settings for node view, wallet, and API
  node {
    # State type.  Possible options are:
    # "utxo" - keep full utxo set, that allows to validate arbitrary block and generate ADProofs
    # "digest" - keep state root hash only and validate transactions via ADProofs
    stateType = "utxo"

    # Download block transactions and verify them (requires BlocksToKeep == 0 if disabled)
    verifyTransactions = true

    # Number of last blocks to keep with transactions and ADproofs, for all other blocks it keep only header and inter-links.
    # Optimization for light clients (requires memory).
    blocksToKeep = -1

    # Download PoPoW proof on node bootstrap
    PoPoWBootstrap = false

    # Minimal suffix size for PoPoW proof (may be pre-defined constant or settings parameter)
    minimalSuffix = 10

    # Is the node is doing mining
    mining = true

    # If true, a node generates blocks being offline. The only really useful case for it probably is to start a new
    # blockchain
    offlineGeneration = false

    # Delay for miner after succesful block creation
    miningDelay = 1s

    useExternalMiner = true

    # Public key mining rewards will be dedicated to
    miningPubKeyHex = null

    # If true, then node wallet will try to collect fee when its balance is low
    usePreEip1559FeeForExternalMiner = true

    # Keeps and processes complete block sections (in addition to header and interlinks). Requires BlocksToKeep == 0 if disabled.
    extraIndex = false
  }

  scorex {
    network {
      bindAddress = "0.0.0.0:9030"
      nodeName = "ergo-pool-node"
      knownPeers = [
        "213.239.193.208:9030",
        "159.65.11.55:9030",
        "165.227.26.175:9030", 
        "159.89.116.15:9030",
        "136.244.110.145:9030"
      ]
    }

    restApi {
      # Hex-encoded Blake2b256 hash of an API key. Should be 64-chars long Base16 string.
      # Below is the hash of "hello" string.
      # Change it!
      apiKeyHash = "324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf"

      # Enable/disable CORS support
      corsAllowed = true

      # binding address
      bindAddress = "0.0.0.0:9053"

      # Max number of concurrent connections (default is 128)
      connectionPoolSize = 128
    }
  }

  wallet {
    # Seed used to generate wallet. String or hex-encoded bytes
    # If not specified, wallet is loaded from seedFile
    #seed = "walletSeedHere"
    
    # Path to file with wallet seed
    seedFile = "/home/ergo/.ergo/wallet/secret"

    # Mnemonic seed used in wallet for tests
    # mnemonicSeed = "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about"

    # Password to encrypt wallet file with
    # If not specified, file is unencrypted
    password = "your_wallet_password_here"

    # Language to be used in mnemonic seed
    mnemonicSeedLang = "english"

    # Number of keys to be generated
    keysToKeep = 100

    # Scan blocks until depth
    scanningDepth = 50

    # How many addresses party may put in a request
    maxAddresses = 100

    # How many boxes (unspent outputs) may be returned in one request
    maxBoxes = 100

    # How many transactions may be returned in one request  
    maxTxs = 100

    # By default, node wallet is doing pre-EIP3 fee structure for external miners
    usePreEip1559FeeForExternalMiner = true
  }
} 